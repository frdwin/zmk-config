/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/*
 * CAPSWORD CONFIGURATION
 */

&caps_word {
  continue-list = <UNDERSCORE MINUS DELETE BACKSPACE>;
};

/*
 * LAYERS DEFINITION
 */

#define DFT 0
#define NUM 1
#define FN  2
#define SYM 3

/*
 * START OF KEYMAP CONFIGURATION
 */

/ {

  /*
   * COMBOS
   */

  combos {
    compatible = "zmk,combos";
	combo_semicol {
      timeout-ms = <50>;
	  layers = <1>;
	  key-positions = <32 33>;
	  bindings = <&kp SEMI>;
	};
  };

  /*
   * MACROS
   */
  
  macros {
    term: term {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_press &kp LGUI>
        , <&macro_tap &kp RET>
        , <&macro_release &kp LGUI>
        ;
    };
  };

  /*
   * TAP DANCE
   */

  behaviors {
    td_num: tap_dance_num {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&lt NUM TAB>, <&tog NUM>;
    };
  };

  /*
   * KEYMAP
   */

  keymap {
    compatible = "zmk,keymap";
      default_layer {
        // ---------------------------------------------------------------------------------------------------------
        // | NONE |  Q  |  W  |  E  |    R    |      T     |   |       Y      |      U   |  I  |  O  |  P  | TERM  |
        // | ESC  |  A  |  S  |  D  |    F    |      G     |   |       H      |      J   |  K  |  L  |  `  |   '   |
        // | CPSW |  Z  |  X  |  C  |    V    |      B     |   |       N      |      M   |  ,  |  .  |  /  | CAPS  |
        //                    | GUI | NUM TAB | LSHIFT ENT |   | RSHIFT SPACE | SYM BSPC | FN  |
        bindings = <
          &none      &kp Q &kp W &kp E &kp R &kp T            &kp Y            &kp U        &kp I     &kp O   &kp P    &term
          &kp ESC    &kp A &kp S &kp D &kp F &kp G            &kp H            &kp J        &kp K     &kp L   &kp GRAVE &kp SQT
          &caps_word &kp Z &kp X &kp C &kp V &kp B            &kp N            &kp M        &kp COMMA &kp DOT &kp FSLH &kp CAPS
                             &kp LGUI &td_num &mt LSHIFT RET  &mt RSHIFT SPACE &lt SYM BSPC &sl FN
        >;
      };

	  lower_layer {
		// -----------------------------------------------------------------------------------------
		// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
		// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
		// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
		//                    | GUI |     | SPC |   | ENT |     | ALT |
        bindings = <
		  &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
		  &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
		  &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
		                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
